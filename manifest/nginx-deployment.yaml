# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   name: nginx-deployment
#   labels:
#     app: nginx
#   namespace: default
# spec:
#   replicas: 2
#   selector:
#     matchLabels:
#       app: nginx
#   template:
#     metadata:
#       labels:
#         app: nginx
#     spec:
#       containers:
#       - name: nginx
#         image: nginx:latest
#         ports:
#         - containerPort: 80
# ---
# apiVersion: v1
# kind: Service
# metadata:
#   name: nginx-preview-service
#   namespace: default
# spec:
#   ports:
#   - protocol: TCP
#     port: 80
#     targetPort: 80
#   selector:
#     app: nginx
#   ports:
#     - protocol: TCP
#       port: 80
#       targetPort: 80
#   type: NodePort 
# ---
# apiVersion: v1
# kind: Service
# metadata:
#   name: nginx-service
#   namespace: default
# spec:
#   ports:
#   - protocol: TCP
#     port: 80
#     targetPort: 80
#   selector:
#     app: nginx

# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   name: nginx-deployment
#   labels:
#     app: nginx
#   namespace: default
# spec:
#   replicas: 1
#   selector:
#     matchLabels:
#       app: nginx
#   template:
#     metadata:
#       labels:
#         app: nginx
#     spec:
#       containers:
#       - name: nginx
#         image: nginx:stable-alpine3.17-slim
#         ports:
#         - containerPort: 80
# ---
# apiVersion: argoproj.io/v1alpha1
# kind: Rollout
# metadata:
#   name: nginx-rollout
#   namespace: default
# spec:
#   replicas: 1
#   selector:
#     matchLabels:
#       app: nginx
#   strategy:
#     blueGreen:
#       activeService: nginx-service
#       previewService: nginx-preview-service
#       autoPromotionEnabled: true
#   template:
#     metadata:
#       labels:
#         app: nginx
#     spec:
#       containers:
#       - name: nginx
#         image: nginx:latest
#         ports:
#         - containerPort: 80
# ---
# apiVersion: v1
# kind: Service
# metadata:
#   name: nginx-service
#   namespace: default
# spec:
#   ports:
#   - protocol: TCP
#     port: 80
#     targetPort: 80
#   selector:
#     app: nginx
# ---
# apiVersion: v1
# kind: Service
# metadata:
#   name: nginx-preview-service
#   namespace: default
# spec:
#   ports:
#   - protocol: TCP
#     port: 80
#     targetPort: 80
#   selector:
#     app: nginx




# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   name: python-app
#   labels:
#     app: python
# spec:
#   replicas: 3
#   selector:
#     matchLabels:
#       app: python
#   template:
#     metadata:
#       labels:
#         app: python
#     spec:
#       containers:
#       - name: minikube
#         image: dikshita858/appimage:latest:green
#         ports:
#         - containerPort: 5000
# ---
# apiVersion: v1
# kind: Service
# metadata:
#   name: python-service
# spec:
#   selector:
#     app: python
#   ports:
#   - protocol: TCP
#     port: 80
#     targetPort: 5000
#   type: LoadBalancer
# ---
# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata:
#   name: python-ingress
#   annotations:
#     kubernetes.io/ingress.class: "nginx"
# spec:
#   rules:
#   - host: your-domain.com
#     http:
#       paths:
#       - path: /
#         pathType: Prefix
#         backend:
#           service:




# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   name: python-app
#   labels:
#     app: python
# spec:
#   replicas: 3
#   selector:
#     matchLabels:
#       app: python
#   template:
#     metadata:
#       labels:
#         app: python
#     spec:
#       containers:
#       - name: minikube
#         image: dikshita858/appimage:latest:green
#         ports:
#         - containerPort: 5000
# ---
# apiVersion: v1
# kind: Service
# metadata:
#   name: python-service
# spec:
#   selector:
#     app: python
#   ports:
#   - protocol: TCP
#     port: 80
#     targetPort: 5000
#   type: LoadBalancer
# ---
# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata:
#   name: python-ingress
#   annotations:
#     kubernetes.io/ingress.class: "nginx"
# spec:
#   rules:
#   - host: your-domain.com
#     http:
#       paths:
#       - path: /
#         pathType: Prefix
#         backend:
#           service:
#             name: python-service
#             port:
#               number: 80
#             name: python-service
#             port:
#               number: 80


apiVersion: apps/v1
kind: Deployment
metadata:
  name: python-app
  namespace: default
  labels:
    app: python
spec:
  replicas: 3
  selector:
    matchLabels:
      app: python
  template:
    metadata:
      labels:
        app: python
    spec:
      containers:
      - name: minikube
        image: dikshita858/appimage:blue
        ports:
        - containerPort: 5000
---
apiVersion: v1
kind: Service
metadata:
  name: python-service
  namespace: default
spec:
  selector:
    app: python
  ports:
  - protocol: TCP
    port: 80
    targetPort: 5000
  type: LoadBalancer
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: python-ingress
  namespace: default
  annotations:
    kubernetes.io/ingress.class: "nginx"
spec:
  rules: http://localhost:5000
  - host: 
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: python-service
            port:
              number: 80
